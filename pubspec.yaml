name: moodplaner
description: Discover new ways to listen to your music!
publish_to: 'none'
version: 0.0.8+5002

environment:
  sdk: '>=2.12.0 <3.0.0'

dependencies:
  flutter:
    sdk: flutter
  animations: ^2.0.0
  provider: ^6.0.0
  # For OS-specific directory paths
  path_provider: ^2.0.2
  assets_audio_player:
    git:
      url: https://github.com/florent37/Flutter-AssetsAudioPlayer.git
  flutter_media_metadata: ^0.1.0
  flutter_local_notifications: ^8.1.1+1
  file_picker: ^4.0.0
  permission_handler: ^8.1.4+2
  share: ^2.0.1
  palette_generator: ^0.3.0
  http: ^0.13.0
  path: ^1.8.0
  url_launcher: ^6.0.3
  implicitly_animated_reorderable_list: ^0.4.0-dev+4
  flag: ^5.0.0-nullsafety
  marquee: ^2.0.0
  auto_size_text: ^3.0.0-nullsafety.0
  cupertino_icons: ^1.0.2
  material_design_icons_flutter: ^4.0.5955
  toggle_switch: ^1.2.0
  font_awesome_flutter: ^9.1.0
  flutter_riverpod: ^0.14.0+3
  intl: ^0.17.0
  dio: ^4.0.0
  flutter_slidable: ^0.6.0
  freezed: ^0.14.2
  loadmore: ^2.0.1
  easy_listview: ^0.1.3
  listview_utils: ^1.0.0-nullsafety
  lazy_loading_list: ^1.0.1
  kmodal_listview: ^0.0.2
  sqflite: ^2.0.0+3
  hive: ^2.0.4
  hive_flutter: ^1.1.0
  cryptography: ^2.0.2
  multi_select_flutter: ^4.0.0
  change_app_package_name: ^1.0.0
  flutter_secure_storage: ^4.2.1
  connectivity: ^3.0.6
  flutter_launcher_icons: ^0.9.1
  flutter_native_splash: ^1.2.1
  flutter_typeahead: ^3.2.0
  select_dialog: ^2.0.0
  audioplayers: ^0.19.1

dev_dependencies:
  hive_generator: ^1.1.0
  build_runner: ^2.0.6
  flutter_test:
    sdk: flutter

flutter_icons:
  image_path: "icon/icon.png"
  android: true
 # ios: true

flutter:
  uses-material-design: true
  assets:
    - assets/images/collection-album.jpg
    - assets/images/credits-tracks.jpg
    - assets/images/credits-artists.jpg
    - assets/images/credits-exception.jpg
    - assets/images/discover-albums.jpg
    - assets/images/discover-tracks.jpg
    - assets/images/discover-artists.jpg
    - assets/images/exception.jpg


flutter_native_splash:

  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  #color: "#42a5f5"
  color: "#ffffff"
  #background_image: "assets/logo.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/transparent.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  image_dark: assets/transparent_reversed.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

  # To enable support for Android 12, set the following parameter to true.  Defaults to false.
  #android12: true
